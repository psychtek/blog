fviz_pca_var(data_PCA_all, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE) # Avoid text overlapping)
fviz_pca_var(data_PCA_all, col.var = "cos2",
fviz_pca_var(data_PCA_all, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) # Avoid text overlapping)
fviz_contrib(data_PCA_all, choice = "var", axes = 1:2, top = 10)
fviz_contrib(data_extract, choice = "var", axes = 1:2, top = 10)
fviz_contrib(data_PCA_all, choice = "var", axes = 1:2, top = 10)
fviz_pca_var(data_PCA_all, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
View(data_PCA_all)
View(data_df)
fviz_pca_var(data_df, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
fviz_pca_biplot(data_PCA_all)
fviz_pca_contrib(data_PCA_all)
fviz_pca_contrib(data_PCA)
fviz_pca(data_extract)
fviz_pca(data_PCA_all)
data_extract
get_pca_var(data_PCA_all)
install.packages("ggforce")
data_PCA
library(ggforce)
data_PCA_all
data_PCA
# Coordinates
head(data_extract$coord)
data_extract$coord
data_df_rescale
recipe(~ ., data = data_df_rescale %>% select_all())
fviz_pca(data_PCA_all)
fviz_pca_var(data_PCA_all, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
data_extract
fviz_pca_var(data_PCA_all, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) # Avoid text overlapping)
fviz_contrib(data_PCA_all, choice = "var", axes = 1:2, top = 10)
ggscreeplot(data_PCA)
print(data_PCA)
data_PCA$rotation
ggplot(data_PCA$rotation, aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
pca_grid <- as.dataframe(data_PCA$rotation)
pca_grid <- as.data.frame(data_PCA$rotation)
pca_grid
ggplot(pca_grid, aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
library(ggforce)
ggplot(pca_grid, aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
devtools::install_github("thomasp85/ggforce")
library(ggforce)
ggplot(pca_grid, aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
library(tidyverse)
data_df <- read_csv(file = "data/nutrian_df.csv")
data_df <- data_df %>% select(-contains("_USRDA"))
data_df$FoodGroup <- factor(data_df$FoodGroup, ordered = is.ordered(data_df$FoodGroup)) # coerce to factor
data_df_rescale <- data_df %>%
select(9:31) %>%
scale(center = TRUE)
data_df %>%
select(-c(FoodGroup, ShortDescrip, Descrip, CommonName, MfgName, ScientificName)) %>%
describe(.)
data_PCA <- prcomp(data_df_rescale)
print(data_PCA)
summary(data_PCA)
plot(data_PCA, type = "l")
data_PCA$rotation
library(ggforce)
pca_grid <- as.data.frame(data_PCA$rotation)
ggplot(pca_grid, aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
pca_grid <- as.data.frame(head(data_PCA$rotation))
ggplot(pca_grid, aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
pca_grid
head(pca_grid)
pca_grid[,1:5]
pca_grid <- as.data.frame(data_PCA$rotation)
pca_grid
ggplot(pca_grid[,1:5], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 1.2, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = .9, shape = 16, size = 0.5) +
facet_matrix(vars(everything()))
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.2, shape = 16, size = 0.5) +
geom_autodensity() +
facet_matrix(vars(everything()), layer.diag = 2)
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.9, shape = 16, size = 0.5) +
geom_autodensity() +
facet_matrix(vars(everything()), layer.diag = 2)
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.9, shape = 16, size = 0.5) +
geom_autodensity() +
facet_matrix(vars(everything()), layer.diag = 2, grid.y.diag = FALSE)
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.9, shape = 16, size = 0.5) +
geom_autodensity() +
geom_density2d() +
facet_matrix(vars(everything()), layer.diag = 2, layer.upper = 3,
grid.y.diag = FALSE)
library(FactoMineR)
data_PCA_all <- PCA(data_df_rescale, ncp  = 5, graph = TRUE)
data_PCA_all$eig #eigen values, percent of varaince and cumulative percentage
data_PCA_all$var$coord # correlations betwewen variables and PCs
head(data_PCA_all$ind$coord)
library(factoextra)
data_extract <- get_pca_var(data_PCA_all)
data_extract
# Coordinates
head(data_extract$coord)
# Cos2: quality on the factore map
head(data_extract$cos2)
# Contributions to the principal components
head(data_extract$contrib)
fviz_pca_var(data_PCA_all, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) # Avoid text overlapping)
# Coordinates
head(data_extract$coord)
fviz_pca_var(data_PCA_all, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) # Avoid text overlapping)
corrplot(data_extract$cos2, is.corr=FALSE)
data_PCA_all$var
corrplot(data_PCA_all$var, is.corr=FALSE)
library(corrplot)
corrplot(data_PCA_all$var, is.corr=FALSE)
data_PCA
data_PCA_all
corrplot(as.matrix(data_PCA_all$var), is.corr=FALSE)
corrplot(data_PCA_all$var, is.corr=FALSE)
data_PCA_all$eig
data_PCA_all$var
data_PCA_all$var$coord
data_PCA_all$var$cor
corrplot(data_PCA_all$var$cor, is.corr=FALSE)
fviz_contrib(data_PCA_all, choice = "var", axes = 1:2, top = 10)
corrplot(data_PCA_all$var$cor, is.corr=FALSE)
fviz_contrib(data_PCA_all, choice = "var", axes = 1:2, top = 10)
fviz_pca_var(data_PCA_all, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
fviz_pca(data_PCA_all)
ggscreeplot(data_PCA)
library(ggbiplot)
ggscreeplot(data_PCA)
ggbiplot(data_PCA_all, ellipse=FALSE, choices=1:2, alpha = 1, circle = FALSE, varname.adjust = 8, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse=FALSE
, choices=1:2
, alpha = 0
, circle = FALSE
, varname.adjust = 8
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse=FALSE
, choices=1:2
, alpha = 0.25
, circle = FALSE
, varname.adjust = 8
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse=FALSE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse=FALSE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, varname.size = 1
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse=FALSE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, varname.size = 10
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse=FALSE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, varname.size = 100
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, varname.size = 100
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, varname.size = .5
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, labels = data_df$FoodGroup)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, labels = data_df$FoodGroup
, labels.size = 1)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, labels = data_df$FoodGroup
, labels.size = 2)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, labels = data_df$FoodGroup
, labels.size = .5)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, varname.adjust = 8
, labels = data_df$FoodGroup
, labels.size = 5)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, groups = data_df$FoodGroup
, varname.adjust = 8
, labels = data_df$FoodGroup
, labels.size = 5)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, groups = data_df$FoodGroup
, varname.adjust = 8)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, groups = data_df$FoodGroup
, varname.adjust = 8
, obs.scale = 1
, var.scale = 1)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, groups = data_df$FoodGroup
, varname.adjust = 8
, scale = TRUE
, obs.scale = 1
, var.scale = 1)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, groups = data_df$FoodGroup
, varname.adjust = 8
, scale = TRUE)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, groups = data_df$FoodGroup
, varname.adjust = 8
, scale = TRUE)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
blogdown:::serve_site()
library(tidyverse)
library(corrplot)
library(cowplot)
data_df <- read_csv(file = "data/nutrian_df.csv")
data_df <- data_df %>% select(-contains("_USRDA"))
data_df$FoodGroup <- factor(data_df$FoodGroup, ordered = is.ordered(data_df$FoodGroup)) # coerce to factor
Foodgroup_cat <- data_df %>% # Group by the food group catagory and count the amont each one occurs
group_by(FoodGroup) %>%
summarise(N = n()) %>%
arrange(N)
Foodgroup_cat <- data_df %>% # Group by the food group catagory and count the amont each one occurs
group_by(FoodGroup) %>%
summarise(N = n()) %>%
arrange(N)
data_df$FoodGroup <- factor(data_df$FoodGroup, ordered = is.ordered(data_df$FoodGroup)) # coerce to factor
Foodgroup_cat <- data_df %>% # Group by the food group catagory and count the amont each one occurs
group_by(FoodGroup) %>%
summarise(N = n()) %>%
arrange(N)
detach("package:corrplot", unload = TRUE)
Foodgroup_cat <- data_df %>% # Group by the food group catagory and count the amont each one occurs
group_by(FoodGroup) %>%
summarise(N = n()) %>%
arrange(N)
detach("package:cowplot", unload = TRUE)
Foodgroup_cat <- data_df %>% # Group by the food group catagory and count the amont each one occurs
group_by(FoodGroup) %>%
summarise(N = n()) %>%
arrange(N)
library(tidyverse)
library(corrplot)
library(cowplot)
# data_df <- read.csv(file = "https://query.data.world/s/iwzl7xgiagpimb2ixfj4fkyztngxs7", stringsAsFactors = FALSE, header = TRUE)
#write.csv(data_df, file = "data/nutrian_df.csv") # write the dataframe to csv
data_df <- read_csv(file = "data/nutrian_df.csv")
data_df <- data_df %>% select(-contains("_USRDA"))
data_df$FoodGroup <- factor(data_df$FoodGroup, ordered = is.ordered(data_df$FoodGroup)) # coerce to factor
Foodgroup_cat <- data_df %>% # Group by the food group catagory and count the amont each one occurs
group_by(FoodGroup) %>%
summarise(N = n()) %>%
arrange(N)
Foodgroup_cat$FoodGroup <- str_remove(Foodgroup_cat$FoodGroup, "Products") # Remove the word "products" from the list
ggplot(Foodgroup_cat) +
aes(x = reorder(FoodGroup, -N), y = N) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Toal Amount of Food Products",
subtitle = "USDRA",
x = "Products",
y = "Frequency")
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup)
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise(Mean = mean())
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(Mean = mean())
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_at(Mean = mean(9:31))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_at(Mean = .vars())
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_at(Mean = .vars(9:31))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_at(.vars(9:31))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_at(vars(9:31))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_at(vars([9:31]))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_at(vars[9:31])
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup)
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summary.lm()
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(.funs = mean())
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(.funs = mean(9:31))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(.funs = mean([9:31]))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(funs = mean())
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(funs(mean))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(list(Mean = mean()))
data_df %>% select(FoodGroup, 9:31) %>% group_by(FoodGroup) %>% summarise_all(list(Mean = mean))
data_df %>%
select(FoodGroup, 9:31) %>%
group_by(FoodGroup) %>%
summarise_all(list(Mean = mean))
esquisse:::esquisser()
ggplot(data_df) +
aes(x = Sugar_g, y = Energy_kcal, fill = FoodGroup, colour = FoodGroup, group = FoodGroup) +
geom_point(size = 0.74) +
scale_fill_hue() +
scale_color_hue() +
scale_x_continuous(trans = "sqrt") +
scale_y_continuous(trans = "sqrt") +
labs(x = "Sugar", y = "Energy k/j", title = "Energy as a Function of Sugar", subtitle = "Food Groups") +
theme_bw() +
facet_wrap(vars(FoodGroup), scales = "free_y")
Foodgroup_cat$FoodGroup <- str_remove(Foodgroup_cat$FoodGroup, "Products") # Remove the word "products" from the list
ggedit:::ggeditAddin()
esquisse:::esquisser()
ggplot(data_df) +
aes(x = Sugar_g, y = Energy_kcal, fill = FoodGroup, colour = FoodGroup) +
geom_point(size = 1L) +
scale_fill_hue() +
scale_color_hue() +
labs(x = "Sugar in gram", y = "Energy in k/cals", title = "Energy as a Function of Sugar", subtitle = "Food Groups") +
theme_bw() +
theme(legend.position = "none") +
facet_wrap(vars(FoodGroup), scales = "free_x")
library(psych)
data_df %>%
select(-c(FoodGroup, ShortDescrip, Descrip, CommonName, MfgName, ScientificName)) %>%
describe(.) %>%
kableExtra::kable()
data_df[,9:31] <- sqrt(data_df[,9:31]) # sqrt transform
esquisse:::esquisser()
data_df_corr <- data_df %>% select(9:31)
data_corrr <- cor(data_df_corr)
corrplot(as.matrix(data_corrr), is.corr = FALSE, method = "square", type = "full")
data_df_rescale <- data_df %>%
select(9:31) %>%
scale(center = TRUE)
data_df_corr <- data_df %>% select(9:31)
data_corrr <- cor(data_df_corr)
corrplot(as.matrix(data_corrr), is.corr = FALSE, method = "square", type = "full")
data_df_lm <- as.data.frame(data_df_lm)
data_df_lm <- as.data.frame(data_df_rescale)
a <- data_df_lm %>%
lm( data = .)
a <- data_df_lm %>%
lm( data = .)
summary(a)
cor(data_df_lm)
summary(a)
data_df %>%
select(-c(FoodGroup, ShortDescrip, Descrip, CommonName, MfgName, ScientificName)) %>%
describe(.)
describe(data_df_rescale)
data_PCA <- prcomp(data_df_rescale)
print(data_PCA)
summary(data_PCA)
plot(data_PCA, type = "l")
data_PCA$rotation
summary(data_PCA)
library(FactoMineR)
data_PCA_all <- PCA(data_df_rescale, ncp  = 5, graph = TRUE)
data_PCA_all$eig #eigen values, percent of varaince and cumulative percentage
data_PCA_all$var$coord # correlations betwewen variables and PCs
data_PCA_all <- PCA(data_df_rescale, ncp  = 5, graph = TRUE)
library(factoextra)
fviz_pca_var(data_PCA_all, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE) # Avoid text overlapping)
corrplot(data_PCA_all$var$cor, is.corr=FALSE)
corrplot(as.matrix(data_corrr), is.corr = FALSE, method = "square", type = "full")
fviz_pca_var(data_PCA_all, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
fviz_pca(data_PCA_all)
library(ggbiplot)
ggscreeplot(data_PCA)
ggbiplot(data_PCA_all
, ellipse= TRUE
, choices=1:2
, alpha = 0.25
, circle = TRUE
, groups = data_df$FoodGroup
, varname.adjust = 8
, scale = TRUE)+
scale_color_discrete(name = '') +
theme(legend.direction = 'horizontal', legend.position = 'top')
library(ggforce)
pca_grid <- as.data.frame(data_PCA$rotation)
# Since the first ttwo compomnents make up most of the variance explain will add the
# 5 to make up 77% of the components for this example
ggplot(pca_grid[,1:7], aes(x = .panel_x, y = .panel_y)) +
geom_point(alpha = 0.9, shape = 16, size = 0.5) +
geom_autodensity() +
geom_density2d() +
facet_matrix(vars(everything()), layer.diag = 2, layer.upper = 3,
grid.y.diag = FALSE)
fviz_pca_biplot(data_PCA_all,
# Individuals
geom.ind = "point",
fill.ind = iris$Species, col.ind = "black",
pointshape = 21, pointsize = 2,
palette = "jco",
addEllipses = TRUE,
# Variables
alpha.var ="contrib", col.var = "contrib",
gradient.cols = "RdYlBu",
legend.title = list(fill = "Species", color = "Contrib",
alpha = "Contrib")
)
fviz_pca_biplot(data_PCA_all,
# Individuals
geom.ind = "point",
fill.ind = data_df$FoodGroup, col.ind = "black",
pointshape = 21, pointsize = 2,
palette = "jco",
addEllipses = TRUE,
# Variables
alpha.var ="contrib", col.var = "contrib",
gradient.cols = "RdYlBu",
legend.title = list(fill = "Species", color = "Contrib",
alpha = "Contrib")
)
blogdown:::serve_site()
blogdown::hugo_version()
blogdown:::serve_site()
